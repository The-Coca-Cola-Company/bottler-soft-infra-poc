# MCP Configuration for Bottler SPOKE
# NO HARDCODING - All values from environment variables
version: "1.0"

discovery:
  enabled: "${MCP_DISCOVERY_ENABLED:true}"
  refresh_interval: "${MCP_DISCOVERY_REFRESH:300}"
  cache_ttl: "${MCP_CACHE_TTL:300}"

transport:
  default: "${MCP_TRANSPORT:sse}"
  timeout: "${MCP_TIMEOUT:30000}"
  max_retries: "${MCP_MAX_RETRIES:3}"

servers:
  # Bottler's OWN Cosmos DB instance
  cosmos:
    name: "Bottler Cosmos DB Server"
    url: "${MCP_COSMOS_URL:http://localhost:8000}"
    transport: "sse"
    auth:
      type: "bearer"
      token: "${MCP_AUTH_TOKEN}"
    metadata:
      bottler_id: "${BOTTLER_ID}"
      purpose: "bottler_data_store"
      containers:
        - "financial_data"
        - "product_inventory"
        - "sales_records"
        - "audit_logs"
        - "bottler_config"
        - "query_cache"
        - "agent_state"
    
  # Bottler's OWN Blob Storage instance  
  blob:
    name: "Bottler Blob Storage Server"
    url: "${MCP_BLOB_URL:http://localhost:8001}"
    transport: "sse"
    auth:
      type: "bearer"
      token: "${MCP_AUTH_TOKEN}"
    metadata:
      bottler_id: "${BOTTLER_ID}"
      purpose: "bottler_file_store"
      containers:
        - "financial-reports"
        - "sales-data"
        - "product-images"
        - "backups"
        - "analytics"
        - "exports"
    
  # Bottler's OWN Service Bus instance
  servicebus:
    name: "Bottler Service Bus Server"
    url: "${MCP_SERVICEBUS_URL:http://localhost:8002}"
    transport: "sse"
    auth:
      type: "bearer"
      token: "${MCP_AUTH_TOKEN}"
    metadata:
      bottler_id: "${BOTTLER_ID}"
      purpose: "bottler_messaging"
      queues:
        - "hub-requests"
        - "financial-updates"
        - "sales-events"
        - "audit-events"
      topics:
        - "bottler-events"
        - "system-alerts"

# Bottler-specific settings
bottler:
  # Identity from environment
  id: "${BOTTLER_ID}"
  name: "${BOTTLER_NAME}"
  region: "${BOTTLER_REGION}"
  
  # Hub communication (SPOKE configuration)
  hub:
    url: "${TCCC_HUB_URL}"
    api_key: "${TCCC_HUB_API_KEY}"
    retry_policy:
      max_retries: 3
      backoff_factor: 2
      timeout: 30
  
  # Data patterns for this bottler
  data_patterns:
    financial:
      container: "financial_data"
      partition_key: "/bottler_id"
    sales:
      container: "sales_records"
      partition_key: "/product_id"
    audit:
      container: "audit_logs"
      partition_key: "/event_type"
      
# Security settings
security:
  # SPOKE: Only accepts requests from hub
  allowed_sources:
    - "tccc_hub"
  # No direct spoke-to-spoke allowed
  block_direct_spoke_communication: true
  # Audit all operations
  audit_enabled: true
  
# Performance settings
performance:
  # Cache query results
  cache_queries: true
  cache_ttl: 300
  # Batch operations
  batch_size: 100
  # Parallel processing
  max_concurrent_operations: 5